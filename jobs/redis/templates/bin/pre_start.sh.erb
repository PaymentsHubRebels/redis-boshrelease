#!/bin/bash

set -u # report the usage of uninitialized variables
set -x

# Best practice per https://redis.io/topics/admin
chpst -u root:root echo never > /sys/kernel/mm/transparent_hugepage/enabled

# Fixes startup warning:
# "WARNING: The TCP backlog setting of 511 cannot be enforced because 
# /proc/sys/net/core/somaxconn is set to the lower value of 128."
#
# The maximum number of "backlogged sockets".  Default is 128.
chpst -u root:root sysctl -w net.core.somaxconn=65535

# The Linux kernel supports the following overcommit handling modes
# 0: The Linux kernel is free to overcommit memory (this is the default), 
# a heuristic algorithm is applied to figure out if enough memory is available.
# 1: The Linux kernel will always overcommit memory, and never check if enough memory is available. 
# This increases the risk of out-of-memory situations, but also improves memory-intensive workloads.
# 2: The Linux kernel will not overcommit memory, and only allocate as much memory as 
# defined in overcommit_ratio.
#
# Redis best practice is vm.overcommit_memory=1 (https://redis.io/topics/admin)
chpst -u root:root sysctl vm.overcommit_memory=1

# Earlier builds generated a redis.log owned by root.  This resets logs dir owners to vcap.
chpst -u root:root chown -R vcap:vcap /var/vcap/sys/log
chpst -u root:root chown -R vcap:vcap /var/vcap/jobs/redis/config

<% if_p("redis.replication") do |replication| %>
<% if replication %>

role=$(/var/vcap/packages/redis-5/bin/redis-cli -h 127.0.0.1 -p 6379 -a <%= p("password") %> info | grep role | cut -d ':' -f 2 | tr -d '\r')

if [[ "${role}" == "slave" ]]; then

    master_host=$(/var/vcap/packages/redis-5/bin/redis-cli -h 127.0.0.1 -p 6379 -a <%= p("password") %> info | grep master_host | cut -d ':' -f 2 | tr -d '\r')
    master_port=$(/var/vcap/packages/redis-5/bin/redis-cli -h 127.0.0.1 -p 6379 -a <%= p("password") %> info | grep master_port | cut -d ':' -f 2 | tr -d '\r')

    if grep -Fxq "slaveof ${master_host} ${master_port}" /var/vcap/jobs/redis/config/redis.conf
    then
        echo "I am already a slaveof ${master_host}"
    else
        previous_master_host=$(cat /var/vcap/jobs/redis/config/redis.conf | grep '^slaveof' | cut -d ' ' -f 2 | tr -d '\r')
        previous_master_port=$(cat /var/vcap/jobs/redis/config/redis.conf | grep '^slaveof' | cut -d ' ' -f 3 | tr -d '\r')
        sed -i -e "s/slaveof ${previous_master_host} ${previous_master_port}/slaveof ${master_host} ${master_port}/g" /var/vcap/jobs/redis/config/redis.conf
    fi
fi
<% end %>
<% end %>
